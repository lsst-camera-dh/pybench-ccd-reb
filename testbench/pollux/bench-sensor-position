#! /usr/bin/env python

import sys, os, os.path
import getopt
import time

import dice.testbench.motor as dtm

# --------- Parse command line arguments ------------------

def usage():
    print >>sys.stderr, "usage: bench-sensor-position"
    print >>sys.stderr, "               [--xy <port>]"
    print >>sys.stderr, "               [--z  <port>]"
    print >>sys.stderr, "               [--unit <step|mm>]"
    print >>sys.stderr, "Returns the current (x,y,z) position of the sensor-plane" 
    print >>sys.stderr, "on the (SN/Sky)Dice test bench."

try:
    opts, args = \
        getopt.getopt(sys.argv[1:], "hv", \
                          ["help", "verbose", "xy=", "z=", "unit="])
except getopt.GetoptError:
    # print help information and exit
    usage()
    sys.exit(1)
        
# print opts
# print args

inputs = []
verbose = False

sensor_xy_port = dtm.Bench.default_sensor_xy_port
sensor_z_port  = dtm.Bench.default_sensor_z_port

unit = "step"

for option, arg in opts:
    if option in ("-h", "--help"):
        help()
        sys.exit(0)
    if option in ("-v", "--verbose"):
        verbose = True
    if option in ("--xy"):
        if (arg == "") or (arg == "None"):
            sensor_xy_port = None
        else:
            sensor_xy_port = arg
    if option in ("--z"):
        if (arg == "") or (arg == "None"):
            sensor_z_port = None
        else:
            sensor_z_port = arg
    if option in ("--unit"):
        unit = arg.lower()
        if unit not in ['mm', 'step']:
            print >>sys.stderr, "error: invalid unit."
            usage()
            sys.exit(2)

# ----- Init testbench motors, send request, then close ---

B = dtm.Bench(sensor_xy_port = sensor_xy_port,
              sensor_z_port  = sensor_z_port,
              source_xy_port = None,
              debug = verbose)
B.open()
B.setup(minimal = True)

x,y,z = B.sensor_position(unit = unit)

B.close()

# ---------------------------------------------------------

print x, y, z

# ---------------------------------------------------------

