#! /usr/bin/env python

import sys, os, os.path
import getopt
import time

import lsst.testbench.pollux as ltp

# --------- Parse command line arguments ------------------

def usage():
    print >>sys.stderr, "usage: xyz-position"
    print >>sys.stderr, "         [--x <port>]"
    print >>sys.stderr, "         [--y <port>]"
    print >>sys.stderr, "         [--z <port>]"
    print >>sys.stderr, "Returns the current (x,y,z) position of the XYZ" 
    print >>sys.stderr, "on the LSST testbench (in mm)."

try:
    opts, args = \
        getopt.getopt(sys.argv[1:], "hv", \
                          ["help", "verbose", "x=", "y=", "z="])
except getopt.GetoptError:
    # print help information and exit
    usage()
    sys.exit(1)
        
# print opts
# print args

verbose = False
x_port = ltp.XYZ.default_x_port
y_port = ltp.XYZ.default_y_port
z_port = ltp.XYZ.default_z_port

for option, arg in opts:
    if option in ("-h", "--help"):
        help()
        sys.exit(0)
    if option in ("-v", "--verbose"):
        verbose = True
    if option in ("--x"):
        if (arg == "") or (arg == "None"):
            x_port = None
        else:
            x_port = arg
    if option in ("--y"):
        if (arg == "") or (arg == "None"):
            y_port = None
        else:
            y_port = arg
    if option in ("--z"):
        if (arg == "") or (arg == "None"):
            z_port = None
        else:
            z_port = arg

# ----- Init testbench motors, send request, then close ---

xyz = ltp.XYZ(x_port = x_port,
              y_port = y_port,
              z_port = z_port,
              debug = verbose)
xyz.open()
xyz.setup()

position = xyz.get_position()

xyz.close()

# ---------------------------------------------------------

print position.get('x'), position.get('y'), position.get('z')

# ---------------------------------------------------------

